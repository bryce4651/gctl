package config

import (
	"github.com/ml444/gkit/log"
	"os"
	"strconv"
)

const (
	EnvEnableDebug  = "ENABLE_DEBUG"
	EnvEnableHTTP   = "ENABLE_HTTP"
	EnvEnableGRPC   = "ENABLE_GRPC"
	
	EnvAddrDebug  = "DEBUG_ADDR"
	EnvAddrHTTP   = "HTTP_ADDR"
	EnvAddrGRPC   = "GRPC_ADDR"
	EnvTracerAddr = "TRACER_ADDR"

	EnvServiceDbURI = "SERVICE_DB_URI"
)

/* default value */
const (
	DefaultEnableDebug = false
	DefaultEnableHTTP  = true
	DefaultEnableGRPC  = true
	DefaultPprofAddr   = ":5060"
	DefaultHTTPAddr    = ":5050"
	DefaultGRPCAddr    = ":5040"
)

func initEnv() error {
	// Use environment variables, if set.
	if enable := os.Getenv(EnvEnableDebug); enable != "" && !GlobalConfig.EnableDebug {
		e, err := strconv.ParseBool(enable)
		if err != nil {
			log.Errorf("err: %v", err)
		} else {
			GlobalConfig.EnableDebug = e
		}
	}
	if enable := os.Getenv(EnvEnableHTTP); enable != "" && GlobalConfig.EnableHTTP {
		e, err := strconv.ParseBool(enable)
		if err != nil {
			log.Errorf("err: %v", err)
		} else {
			GlobalConfig.EnableHTTP = e
		}
	}
	if enable := os.Getenv(EnvEnableGRPC); enable != "" && GlobalConfig.EnableGRPC {
		e, err := strconv.ParseBool(enable)
		if err != nil {
			log.Errorf("err: %v", err)
		} else {
			GlobalConfig.EnableGRPC = e
		}
	}
	if addr := os.Getenv(EnvAddrDebug); addr != "" && GlobalConfig.PprofAddr == DefaultPprofAddr {
		GlobalConfig.PprofAddr = addr
	}
	if addr := os.Getenv(EnvAddrHTTP); addr != "" && GlobalConfig.HTTPAddr == DefaultHTTPAddr {
		GlobalConfig.HTTPAddr = addr
	}
	if addr := os.Getenv(EnvAddrGRPC); addr != "" && GlobalConfig.GRPCAddr == DefaultGRPCAddr {
		GlobalConfig.GRPCAddr = addr
	}
	if GlobalConfig.DbURI == "" {
		GlobalConfig.DbURI = os.Getenv(EnvServiceDbURI)
		if GlobalConfig.EnableDebug {
			log.Info("DB:", GlobalConfig.DbURI)
		}
	}
	if addr := os.Getenv(EnvTracerAddr); addr != "" && GlobalConfig.TracerAddr != "" {
		GlobalConfig.TracerAddr = addr
	}

	return nil
}