syntax = "proto3";

package {{ .PackageName }};

option go_package = "{{ .ModulePrefix }}/pkg/{{ .ServiceName }}";

import "validate/validate.proto";
import "listoption/listoption.proto";
import "google/api/annotations.proto";

service {{ .ServiceName }} {
	rpc Create{{.CaseServiceName}} (Create{{.CaseServiceName}}Req) returns (Create{{.CaseServiceName}}Rsp){
	    option (google.api.http) = {
	        post: "/{{ .PackageName }}/Create{{.CaseServiceName}}"
	        body: "*"
	    };
	};
	rpc Update{{.CaseServiceName}} (Update{{.CaseServiceName}}Req) returns (Update{{.CaseServiceName}}Rsp){
	    option (google.api.http) = {
            post: "/{{ .PackageName }}/Update{{.CaseServiceName}}"
            body: "*"
        };
	};
	rpc Delete{{.CaseServiceName}} (Delete{{.CaseServiceName}}Req) returns (Delete{{.CaseServiceName}}Rsp){
	    option (google.api.http) = {
            post: "/{{ .PackageName }}/Delete{{.CaseServiceName}}"
            body: "*"
        };
	};
	rpc Get{{.CaseServiceName}} (Get{{.CaseServiceName}}Req) returns (Get{{.CaseServiceName}}Rsp){
	    option (google.api.http) = {
            post: "/{{ .PackageName }}/Get{{.CaseServiceName}}"
            body: "*"
        };
	};
	rpc List{{.CaseServiceName}} (List{{.CaseServiceName}}Req) returns (List{{.CaseServiceName}}Rsp){
	     option (google.api.http) = {
            post: "/{{ .PackageName }}/List{{.CaseServiceName}}"
            body: "*"
        };
	};
	rpc List{{.CaseServiceName}}Sys (List{{.CaseServiceName}}SysReq) returns (List{{.CaseServiceName}}SysRsp);
}

// range of error codes: [{{.StartErrCode}}, {{.EndErrCode}}]
enum ErrCode {
    Success = 0;
    //@status_code: 400
    ErrInvalidParam = {{.StartErrCode}}; // 非法参数
    //@status_code: 400
    ErrParamRequired = {{Add .StartErrCode 1}}; // 缺失参数
    //@status_code: 404
    ErrNotFound{{.CaseServiceName}} = {{Add .StartErrCode 2}}; // 未找到相关记录
}

message Model{{.CaseServiceName}} {
    // @gorm: primarykey
    uint64 id = 1;
    // @gorm: comment:'企业ID'
    uint64 corp_id = 2;
    // @gorm: comment:'创建时间'
    uint32 created_at = 3;
    // @gorm: comment:'更新时间'
    uint32 updated_at = 4;
    // @gorm: comment:'删除时间'
    uint32 deleted_at = 5;
}

message Create{{.CaseServiceName}}Req {
    Model{{.CaseServiceName}} data = 1 [(validate.rules).message.required = true];
}
message Create{{.CaseServiceName}}Rsp {
    Model{{.CaseServiceName}} data = 1;
}

message Update{{.CaseServiceName}}Req {
    Model{{.CaseServiceName}} data = 1 [(validate.rules).message.required = true];
}
message Update{{.CaseServiceName}}Rsp {
    Model{{.CaseServiceName}} data = 1;
}

message Delete{{.CaseServiceName}}Req {
    repeated uint64 id_list = 1 [(validate.rules).repeated.min_items = 1];
}
message Delete{{.CaseServiceName}}Rsp {}

message Get{{.CaseServiceName}}Req {
    uint64 id = 1 [(validate.rules).uint64.gt = 0];
}
message Get{{.CaseServiceName}}Rsp {
    Model{{.CaseServiceName}} data = 1;
}

message List{{.CaseServiceName}}Req {
    // @ref_to: List{{.CaseServiceName}}SysReq.ListOpt
	listoption.ListOption list_option = 1;

	repeated option.Option options = 2;
}
message List{{.CaseServiceName}}Rsp {
    listoption.Paginate paginate = 1;
    repeated Model{{.CaseServiceName}} list = 2;

    // 如果有多余的返回，请配合options使用
}

message List{{.CaseServiceName}}SysReq {
    enum ListOpt {
		ListOptNil = 0;
        // @ref_to: listoption.GeneralListOpt

	}
	listoption.ListOption list_option = 1;
	uint64 corp_id = 2 [(validate.rules).uint64.gt = 0];
}
message List{{.CaseServiceName}}SysRsp {
    listoption.Paginate paginate = 1;
    repeated Model{{.CaseServiceName}} list = 2;
}
